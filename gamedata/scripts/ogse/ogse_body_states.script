-- -*- mode: lua; coding: windows-1251-dos -*-

local jump_sound
local volume = 0.3

local accel = false
local sprint = false
local crouch = false
local crouch_long = false

function attach( sm )
  	sm:subscribe({ signal = "on_update", fun = this.actor_body_state })
	sm:subscribe({ signal = "on_key_down",	fun = this.on_key_press })
	sm:subscribe({ signal = "on_key_up",	fun = this.on_key_release })
	sm:subscribe({ signal = "on_actor_weapon_zoom_out", fun = this.zoom_out }) 
	sm:subscribe({ signal = "on_actor_weapon_zoom_in", fun = this.zoom_in })	
end

function zoom_in()
    level.add_cam_effector( "camera_effects\\zoom_crp.anm", 8559, false, "" )
end

function zoom_out()
    level.add_cam_effector( "camera_effects\\zoom_crp.anm", 8559, false, "" )
end

function on_key_press(key, bind)
	if level.main_input_receiver() and not db.actor:alive() then return end
	if key == bind_to_dik(key_bindings.kR_LOOKOUT) then
		level.add_cam_effector("camera_effects\\lean_right_crp.anm", 1903, false, "")
	end
	if key == bind_to_dik(key_bindings.kL_LOOKOUT) then
		level.add_cam_effector("camera_effects\\lean_left_crp.anm", 1902, false, "")
	end
	if key == bind_to_dik(key_bindings.kCROUCH) then
		level.add_cam_effector("camera_effects\\crouch_crp.anm", 1900, false, "")
		crouch = true
	end
	if crouch and key == bind_to_dik(key_bindings.kACCEL) then
		level.add_cam_effector("camera_effects\\crouch_crp.anm", 1900, false, "")
		crouch_long = true
	end
	if key == bind_to_dik(key_bindings.kACCEL) then
		accel = true
	end
	if key == bind_to_dik(key_bindings.kJUMP) then
		level.add_cam_effector("camera_effects\\jump_crp.anm", 1906, false, "")
	end
	if key == bind_to_dik(key_bindings.kFWD) then

		sprint = true
	end
	if accel and key == bind_to_dik(key_bindings.kFWD) then

	end
end

function on_key_release(key, bind)
	if level.main_input_receiver() and not db.actor:alive() then return end
	if key == bind_to_dik(key_bindings.kR_LOOKOUT) then
		level.add_cam_effector("camera_effects\\lean_right_crp.anm", 1903, false, "")
	end
	if key == bind_to_dik(key_bindings.kL_LOOKOUT) then
		level.add_cam_effector("camera_effects\\lean_left_crp.anm", 1902, false, "")
	end
	if key == bind_to_dik(key_bindings.kCROUCH) then
		level.add_cam_effector("camera_effects\\stand_crp.anm", 1901, false, "")
		crouch = false
	end
	if sprint and key == bind_to_dik(key_bindings.kACCEL) then
		accel = false
	end
	if crouch and key == bind_to_dik(key_bindings.kACCEL) then
		level.add_cam_effector("camera_effects\\stand_crp.anm", 1901, false, "")
		crouch_long = false
	end
	if crouch_long and key == bind_to_dik(key_bindings.kCROUCH) then
		level.add_cam_effector("camera_effects\\stand_crp.anm", 1901, false, "")
	end

end

local body_states = { -- флажки состояния тела актора
[1]	= "fwd",            -- Вперёд
[2]	= "back",           -- Назад
[4]	= "l_strafe",       -- Стрейф влево
[8]	= "r_strafe",       -- Стрейф вправо
[16]	= "crouch",         -- Присед
[32]	= "accel",          -- Ускорение
[64]	= "turn",           -- Повернуть
[128]	= "jump",           -- Прыжок
[256]	= "fall",           -- Падение
[512]	= "landing",        -- Приземление
[1024]	= "landing2",       -- Приземление 2
[2048]	= "climb",          -- Взбираться
[4096]	= "sprint",         -- Спринт
[8192]	= "l_lookout",      -- Выглянуть влево
[16384]	= "r_lookout"       -- Выглянуть вправо
}

-- получения флагов состояния тела актора
function actor_body_state()

local is_normal = get_actor_obj():is_actor_normal()
local is_crouch = get_actor_obj():is_actor_crouch()
local is_creep = get_actor_obj():is_actor_creep()
local is_climb = get_actor_obj():is_actor_climb()
local is_walking = get_actor_obj():is_actor_walking()
local is_running = get_actor_obj():is_actor_running()
local is_sprinting = get_actor_obj():is_actor_sprinting()
local is_crouching = get_actor_obj():is_actor_crouching()
local is_creeping = get_actor_obj():is_actor_creeping()
local is_climbing = get_actor_obj():is_actor_sprinting()
local is_moving = get_actor_obj():is_actor_moving()

  local body_state = body_states[ get_actor_obj():get_body_state() ]
  if ( is_moving ) and ( body_state == "landing" or body_state == "landing2" ) then
		local rand = math.random(1,2)
		level.add_cam_effector("camera_effects\\landing_crp" .. rand .. ".anm", 1905, false, "")
  elseif ( not is_moving ) and ( body_state == "landing" or body_state == "landing2" ) then
		local rand = math.random(1,2)
		level.add_cam_effector("camera_effects\\landing_crp" .. rand .. ".anm", 1905, false, "")
  end
end